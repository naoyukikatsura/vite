diff --git a/node_modules/esbuild-register/dist/node.js b/node_modules/esbuild-register/dist/node.js
index 274bb1d..03e44aa 100644
--- a/node_modules/esbuild-register/dist/node.js
+++ b/node_modules/esbuild-register/dist/node.js
@@ -2628,12 +2628,16 @@ var require_lib2 = __commonJS((exports, module2) => {
   module2.exports.default = JoyCon2;
 });
 
-// node_modules/.pnpm/tsconfig-paths@3.12.0/node_modules/tsconfig-paths/lib/filesystem.js
+// node_modules/.pnpm/tsconfig-paths@4.2.0/node_modules/tsconfig-paths/lib/filesystem.js
 var require_filesystem = __commonJS((exports) => {
   "use strict";
   Object.defineProperty(exports, "__esModule", {value: true});
+  exports.removeExtension = exports.fileExistsAsync = exports.readJsonFromDiskAsync = exports.readJsonFromDiskSync = exports.fileExistsSync = void 0;
   var fs3 = require("fs");
   function fileExistsSync(path) {
+    if (!fs3.existsSync(path)) {
+      return false;
+    }
     try {
       var stats = fs3.statSync(path);
       return stats.isFile();
@@ -2674,10 +2678,11 @@ var require_filesystem = __commonJS((exports) => {
   exports.removeExtension = removeExtension;
 });
 
-// node_modules/.pnpm/tsconfig-paths@3.12.0/node_modules/tsconfig-paths/lib/mapping-entry.js
+// node_modules/.pnpm/tsconfig-paths@4.2.0/node_modules/tsconfig-paths/lib/mapping-entry.js
 var require_mapping_entry = __commonJS((exports) => {
   "use strict";
   Object.defineProperty(exports, "__esModule", {value: true});
+  exports.getAbsoluteMappingEntries = void 0;
   var path = require("path");
   function getAbsoluteMappingEntries(absoluteBaseUrl, paths, addMatchAll) {
     var sortedKeys = sortByLongestPrefix(Object.keys(paths));
@@ -2687,14 +2692,14 @@ var require_mapping_entry = __commonJS((exports) => {
       absolutePaths.push({
         pattern: key,
         paths: paths[key].map(function(pathToResolve) {
-          return path.join(absoluteBaseUrl, pathToResolve);
+          return path.resolve(absoluteBaseUrl, pathToResolve);
         })
       });
     }
     if (!paths["*"] && addMatchAll) {
       absolutePaths.push({
         pattern: "*",
-        paths: [absoluteBaseUrl.replace(/\/$/, "") + "/*"]
+        paths: ["".concat(absoluteBaseUrl.replace(/\/$/, ""), "/*")]
       });
     }
     return absolutePaths;
@@ -2711,15 +2716,16 @@ var require_mapping_entry = __commonJS((exports) => {
   }
 });
 
-// node_modules/.pnpm/tsconfig-paths@3.12.0/node_modules/tsconfig-paths/lib/try-path.js
+// node_modules/.pnpm/tsconfig-paths@4.2.0/node_modules/tsconfig-paths/lib/try-path.js
 var require_try_path = __commonJS((exports) => {
   "use strict";
   Object.defineProperty(exports, "__esModule", {value: true});
+  exports.exhaustiveTypeException = exports.getStrippedPath = exports.getPathsToTry = void 0;
   var path = require("path");
   var path_1 = require("path");
   var filesystem_1 = require_filesystem();
   function getPathsToTry(extensions, absolutePathMappings, requestedModule) {
-    if (!absolutePathMappings || !requestedModule || requestedModule[0] === "." || requestedModule[0] === path.sep) {
+    if (!absolutePathMappings || !requestedModule || requestedModule[0] === ".") {
       return void 0;
     }
     var pathsToTry = [];
@@ -2752,11 +2758,11 @@ var require_try_path = __commonJS((exports) => {
   }
   exports.getPathsToTry = getPathsToTry;
   function getStrippedPath(tryPath) {
-    return tryPath.type === "index" ? path_1.dirname(tryPath.path) : tryPath.type === "file" ? tryPath.path : tryPath.type === "extension" ? filesystem_1.removeExtension(tryPath.path) : tryPath.type === "package" ? tryPath.path : exhaustiveTypeException(tryPath.type);
+    return tryPath.type === "index" ? (0, path_1.dirname)(tryPath.path) : tryPath.type === "file" ? tryPath.path : tryPath.type === "extension" ? (0, filesystem_1.removeExtension)(tryPath.path) : tryPath.type === "package" ? tryPath.path : exhaustiveTypeException(tryPath.type);
   }
   exports.getStrippedPath = getStrippedPath;
   function exhaustiveTypeException(check) {
-    throw new Error("Unknown type " + check);
+    throw new Error("Unknown type ".concat(check));
   }
   exports.exhaustiveTypeException = exhaustiveTypeException;
   function matchStar(pattern, search) {
@@ -2782,10 +2788,11 @@ var require_try_path = __commonJS((exports) => {
   }
 });
 
-// node_modules/.pnpm/tsconfig-paths@3.12.0/node_modules/tsconfig-paths/lib/match-path-sync.js
+// node_modules/.pnpm/tsconfig-paths@4.2.0/node_modules/tsconfig-paths/lib/match-path-sync.js
 var require_match_path_sync = __commonJS((exports) => {
   "use strict";
   Object.defineProperty(exports, "__esModule", {value: true});
+  exports.matchFromAbsolutePaths = exports.createMatchPath = void 0;
   var path = require("path");
   var Filesystem = require_filesystem();
   var MappingEntry = require_mapping_entry();
@@ -2825,8 +2832,10 @@ var require_match_path_sync = __commonJS((exports) => {
   exports.matchFromAbsolutePaths = matchFromAbsolutePaths;
   function findFirstExistingMainFieldMappedFile(packageJson, mainFields, packageJsonPath, fileExists) {
     for (var index = 0; index < mainFields.length; index++) {
-      var mainFieldName = mainFields[index];
-      var candidateMapping = packageJson[mainFieldName];
+      var mainFieldSelector = mainFields[index];
+      var candidateMapping = typeof mainFieldSelector === "string" ? packageJson[mainFieldSelector] : mainFieldSelector.reduce(function(obj, key) {
+        return obj[key];
+      }, packageJson);
       if (candidateMapping && typeof candidateMapping === "string") {
         var candidateFilePath = path.join(path.dirname(packageJsonPath), candidateMapping);
         if (fileExists(candidateFilePath)) {
@@ -2854,7 +2863,7 @@ var require_match_path_sync = __commonJS((exports) => {
         if (packageJson) {
           var mainFieldMappedFile = findFirstExistingMainFieldMappedFile(packageJson, mainFields, tryPath.path, fileExists);
           if (mainFieldMappedFile) {
-            return Filesystem.removeExtension(mainFieldMappedFile);
+            return mainFieldMappedFile;
           }
         }
       } else {
@@ -2865,10 +2874,11 @@ var require_match_path_sync = __commonJS((exports) => {
   }
 });
 
-// node_modules/.pnpm/tsconfig-paths@3.12.0/node_modules/tsconfig-paths/lib/match-path-async.js
+// node_modules/.pnpm/tsconfig-paths@4.2.0/node_modules/tsconfig-paths/lib/match-path-async.js
 var require_match_path_async = __commonJS((exports) => {
   "use strict";
   Object.defineProperty(exports, "__esModule", {value: true});
+  exports.matchFromAbsolutePathsAsync = exports.createMatchPathAsync = void 0;
   var path = require("path");
   var TryPath = require_try_path();
   var MappingEntry = require_mapping_entry();
@@ -2916,7 +2926,10 @@ var require_match_path_async = __commonJS((exports) => {
     var tryNext = function() {
       return findFirstExistingMainFieldMappedFile(packageJson, mainFields, packageJsonPath, fileExistsAsync, doneCallback, index + 1);
     };
-    var mainFieldMapping = packageJson[mainFields[index]];
+    var mainFieldSelector = mainFields[index];
+    var mainFieldMapping = typeof mainFieldSelector === "string" ? packageJson[mainFieldSelector] : mainFieldSelector.reduce(function(obj, key) {
+      return obj[key];
+    }, packageJson);
     if (typeof mainFieldMapping !== "string") {
       return tryNext();
     }
@@ -2963,7 +2976,7 @@ var require_match_path_async = __commonJS((exports) => {
               return doneCallback(mainFieldErr);
             }
             if (mainFieldMappedFile) {
-              return doneCallback(void 0, Filesystem.removeExtension(mainFieldMappedFile));
+              return doneCallback(void 0, mainFieldMappedFile);
             }
             return findFirstExistingPath(tryPaths, readJson, fileExists, doneCallback, index + 1, mainFields);
           });
@@ -2976,95 +2989,48 @@ var require_match_path_async = __commonJS((exports) => {
   }
 });
 
-// node_modules/.pnpm/json5@1.0.1/node_modules/json5/lib/unicode.js
-var require_unicode = __commonJS((exports) => {
-  "use strict";
-  Object.defineProperty(exports, "__esModule", {value: true});
-  var Space_Separator = exports.Space_Separator = /[\u1680\u2000-\u200A\u202F\u205F\u3000]/;
-  var ID_Start = exports.ID_Start = /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/;
-  var ID_Continue = exports.ID_Continue = /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/;
+// node_modules/.pnpm/json5@2.2.3/node_modules/json5/lib/unicode.js
+var require_unicode = __commonJS((exports, module2) => {
+  module2.exports.Space_Separator = /[\u1680\u2000-\u200A\u202F\u205F\u3000]/;
+  module2.exports.ID_Start = /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]/;
+  module2.exports.ID_Continue = /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u09FC\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9-\u0AFF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D00-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF9\u1D00-\u1DF9\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDE00-\uDE3E\uDE47\uDE50-\uDE83\uDE86-\uDE99\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD47\uDD50-\uDD59]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/;
 });
 
-// node_modules/.pnpm/json5@1.0.1/node_modules/json5/lib/util.js
-var require_util2 = __commonJS((exports) => {
-  "use strict";
-  Object.defineProperty(exports, "__esModule", {value: true});
-  exports.isSpaceSeparator = isSpaceSeparator;
-  exports.isIdStartChar = isIdStartChar;
-  exports.isIdContinueChar = isIdContinueChar;
-  exports.isDigit = isDigit;
-  exports.isHexDigit = isHexDigit;
-  var _unicode = require_unicode();
-  var unicode = _interopRequireWildcard(_unicode);
-  function _interopRequireWildcard(obj) {
-    if (obj && obj.__esModule) {
-      return obj;
-    } else {
-      var newObj = {};
-      if (obj != null) {
-        for (var key in obj) {
-          if (Object.prototype.hasOwnProperty.call(obj, key))
-            newObj[key] = obj[key];
-        }
-      }
-      newObj.default = obj;
-      return newObj;
+// node_modules/.pnpm/json5@2.2.3/node_modules/json5/lib/util.js
+var require_util2 = __commonJS((exports, module2) => {
+  var unicode = require_unicode();
+  module2.exports = {
+    isSpaceSeparator(c) {
+      return typeof c === "string" && unicode.Space_Separator.test(c);
+    },
+    isIdStartChar(c) {
+      return typeof c === "string" && (c >= "a" && c <= "z" || c >= "A" && c <= "Z" || c === "$" || c === "_" || unicode.ID_Start.test(c));
+    },
+    isIdContinueChar(c) {
+      return typeof c === "string" && (c >= "a" && c <= "z" || c >= "A" && c <= "Z" || c >= "0" && c <= "9" || c === "$" || c === "_" || c === "\u200C" || c === "\u200D" || unicode.ID_Continue.test(c));
+    },
+    isDigit(c) {
+      return typeof c === "string" && /[0-9]/.test(c);
+    },
+    isHexDigit(c) {
+      return typeof c === "string" && /[0-9A-Fa-f]/.test(c);
     }
-  }
-  function isSpaceSeparator(c) {
-    return unicode.Space_Separator.test(c);
-  }
-  function isIdStartChar(c) {
-    return c >= "a" && c <= "z" || c >= "A" && c <= "Z" || c === "$" || c === "_" || unicode.ID_Start.test(c);
-  }
-  function isIdContinueChar(c) {
-    return c >= "a" && c <= "z" || c >= "A" && c <= "Z" || c >= "0" && c <= "9" || c === "$" || c === "_" || c === "\u200C" || c === "\u200D" || unicode.ID_Continue.test(c);
-  }
-  function isDigit(c) {
-    return /[0-9]/.test(c);
-  }
-  function isHexDigit(c) {
-    return /[0-9A-Fa-f]/.test(c);
-  }
+  };
 });
 
-// node_modules/.pnpm/json5@1.0.1/node_modules/json5/lib/parse.js
+// node_modules/.pnpm/json5@2.2.3/node_modules/json5/lib/parse.js
 var require_parse = __commonJS((exports, module2) => {
-  "use strict";
-  Object.defineProperty(exports, "__esModule", {value: true});
-  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
-    return typeof obj;
-  } : function(obj) {
-    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
-  };
-  exports.default = parse;
-  var _util = require_util2();
-  var util = _interopRequireWildcard(_util);
-  function _interopRequireWildcard(obj) {
-    if (obj && obj.__esModule) {
-      return obj;
-    } else {
-      var newObj = {};
-      if (obj != null) {
-        for (var key2 in obj) {
-          if (Object.prototype.hasOwnProperty.call(obj, key2))
-            newObj[key2] = obj[key2];
-        }
-      }
-      newObj.default = obj;
-      return newObj;
-    }
-  }
-  var source = void 0;
-  var parseState = void 0;
-  var stack = void 0;
-  var pos = void 0;
-  var line = void 0;
-  var column = void 0;
-  var token = void 0;
-  var key = void 0;
-  var root = void 0;
-  function parse(text, reviver) {
+  var util = require_util2();
+  var source;
+  var parseState;
+  var stack;
+  var pos;
+  var line;
+  var column;
+  var token;
+  var key;
+  var root;
+  module2.exports = function parse(text, reviver) {
     source = String(text);
     parseState = "start";
     stack = [];
@@ -3082,36 +3048,58 @@ var require_parse = __commonJS((exports, module2) => {
       return internalize({"": root}, "", reviver);
     }
     return root;
-  }
+  };
   function internalize(holder, name, reviver) {
-    var value = holder[name];
-    if (value != null && (typeof value === "undefined" ? "undefined" : _typeof(value)) === "object") {
-      for (var _key in value) {
-        var replacement = internalize(value, _key, reviver);
-        if (replacement === void 0) {
-          delete value[_key];
-        } else {
-          value[_key] = replacement;
+    const value = holder[name];
+    if (value != null && typeof value === "object") {
+      if (Array.isArray(value)) {
+        for (let i = 0; i < value.length; i++) {
+          const key2 = String(i);
+          const replacement = internalize(value, key2, reviver);
+          if (replacement === void 0) {
+            delete value[key2];
+          } else {
+            Object.defineProperty(value, key2, {
+              value: replacement,
+              writable: true,
+              enumerable: true,
+              configurable: true
+            });
+          }
+        }
+      } else {
+        for (const key2 in value) {
+          const replacement = internalize(value, key2, reviver);
+          if (replacement === void 0) {
+            delete value[key2];
+          } else {
+            Object.defineProperty(value, key2, {
+              value: replacement,
+              writable: true,
+              enumerable: true,
+              configurable: true
+            });
+          }
         }
       }
     }
     return reviver.call(holder, name, value);
   }
-  var lexState = void 0;
-  var buffer = void 0;
-  var doubleQuote = void 0;
-  var _sign = void 0;
-  var c = void 0;
+  var lexState;
+  var buffer;
+  var doubleQuote;
+  var sign;
+  var c;
   function lex() {
     lexState = "default";
     buffer = "";
     doubleQuote = false;
-    _sign = 1;
+    sign = 1;
     for (; ; ) {
       c = peek();
-      var _token = lexStates[lexState]();
-      if (_token) {
-        return _token;
+      const token2 = lexStates[lexState]();
+      if (token2) {
+        return token2;
       }
     }
   }
@@ -3121,7 +3109,7 @@ var require_parse = __commonJS((exports, module2) => {
     }
   }
   function read() {
-    var c2 = peek();
+    const c2 = peek();
     if (c2 === "\n") {
       line++;
       column = 0;
@@ -3135,465 +3123,481 @@ var require_parse = __commonJS((exports, module2) => {
     }
     return c2;
   }
-  var lexStates = {default: function _default() {
-    switch (c) {
-      case "	":
-      case "\v":
-      case "\f":
-      case " ":
-      case "\xA0":
-      case "\uFEFF":
-      case "\n":
-      case "\r":
-      case "\u2028":
-      case "\u2029":
-        read();
-        return;
-      case "/":
+  var lexStates = {
+    default() {
+      switch (c) {
+        case "	":
+        case "\v":
+        case "\f":
+        case " ":
+        case "\xA0":
+        case "\uFEFF":
+        case "\n":
+        case "\r":
+        case "\u2028":
+        case "\u2029":
+          read();
+          return;
+        case "/":
+          read();
+          lexState = "comment";
+          return;
+        case void 0:
+          read();
+          return newToken("eof");
+      }
+      if (util.isSpaceSeparator(c)) {
         read();
-        lexState = "comment";
         return;
-      case void 0:
-        read();
-        return newToken("eof");
-    }
-    if (util.isSpaceSeparator(c)) {
+      }
+      return lexStates[parseState]();
+    },
+    comment() {
+      switch (c) {
+        case "*":
+          read();
+          lexState = "multiLineComment";
+          return;
+        case "/":
+          read();
+          lexState = "singleLineComment";
+          return;
+      }
+      throw invalidChar(read());
+    },
+    multiLineComment() {
+      switch (c) {
+        case "*":
+          read();
+          lexState = "multiLineCommentAsterisk";
+          return;
+        case void 0:
+          throw invalidChar(read());
+      }
       read();
-      return;
-    }
-    return lexStates[parseState]();
-  }, comment: function comment() {
-    switch (c) {
-      case "*":
-        read();
-        lexState = "multiLineComment";
-        return;
-      case "/":
-        read();
-        lexState = "singleLineComment";
-        return;
-    }
-    throw invalidChar(read());
-  }, multiLineComment: function multiLineComment() {
-    switch (c) {
-      case "*":
-        read();
-        lexState = "multiLineCommentAsterisk";
-        return;
-      case void 0:
+    },
+    multiLineCommentAsterisk() {
+      switch (c) {
+        case "*":
+          read();
+          return;
+        case "/":
+          read();
+          lexState = "default";
+          return;
+        case void 0:
+          throw invalidChar(read());
+      }
+      read();
+      lexState = "multiLineComment";
+    },
+    singleLineComment() {
+      switch (c) {
+        case "\n":
+        case "\r":
+        case "\u2028":
+        case "\u2029":
+          read();
+          lexState = "default";
+          return;
+        case void 0:
+          read();
+          return newToken("eof");
+      }
+      read();
+    },
+    value() {
+      switch (c) {
+        case "{":
+        case "[":
+          return newToken("punctuator", read());
+        case "n":
+          read();
+          literal("ull");
+          return newToken("null", null);
+        case "t":
+          read();
+          literal("rue");
+          return newToken("boolean", true);
+        case "f":
+          read();
+          literal("alse");
+          return newToken("boolean", false);
+        case "-":
+        case "+":
+          if (read() === "-") {
+            sign = -1;
+          }
+          lexState = "sign";
+          return;
+        case ".":
+          buffer = read();
+          lexState = "decimalPointLeading";
+          return;
+        case "0":
+          buffer = read();
+          lexState = "zero";
+          return;
+        case "1":
+        case "2":
+        case "3":
+        case "4":
+        case "5":
+        case "6":
+        case "7":
+        case "8":
+        case "9":
+          buffer = read();
+          lexState = "decimalInteger";
+          return;
+        case "I":
+          read();
+          literal("nfinity");
+          return newToken("numeric", Infinity);
+        case "N":
+          read();
+          literal("aN");
+          return newToken("numeric", NaN);
+        case '"':
+        case "'":
+          doubleQuote = read() === '"';
+          buffer = "";
+          lexState = "string";
+          return;
+      }
+      throw invalidChar(read());
+    },
+    identifierNameStartEscape() {
+      if (c !== "u") {
         throw invalidChar(read());
-    }
-    read();
-  }, multiLineCommentAsterisk: function multiLineCommentAsterisk() {
-    switch (c) {
-      case "*":
-        read();
-        return;
-      case "/":
-        read();
-        lexState = "default";
+      }
+      read();
+      const u = unicodeEscape();
+      switch (u) {
+        case "$":
+        case "_":
+          break;
+        default:
+          if (!util.isIdStartChar(u)) {
+            throw invalidIdentifier();
+          }
+          break;
+      }
+      buffer += u;
+      lexState = "identifierName";
+    },
+    identifierName() {
+      switch (c) {
+        case "$":
+        case "_":
+        case "\u200C":
+        case "\u200D":
+          buffer += read();
+          return;
+        case "\\":
+          read();
+          lexState = "identifierNameEscape";
+          return;
+      }
+      if (util.isIdContinueChar(c)) {
+        buffer += read();
         return;
-      case void 0:
+      }
+      return newToken("identifier", buffer);
+    },
+    identifierNameEscape() {
+      if (c !== "u") {
         throw invalidChar(read());
-    }
-    read();
-    lexState = "multiLineComment";
-  }, singleLineComment: function singleLineComment() {
-    switch (c) {
-      case "\n":
-      case "\r":
-      case "\u2028":
-      case "\u2029":
-        read();
-        lexState = "default";
-        return;
-      case void 0:
-        read();
-        return newToken("eof");
-    }
-    read();
-  }, value: function value() {
-    switch (c) {
-      case "{":
-      case "[":
-        return newToken("punctuator", read());
-      case "n":
-        read();
-        literal("ull");
-        return newToken("null", null);
-      case "t":
-        read();
-        literal("rue");
-        return newToken("boolean", true);
-      case "f":
-        read();
-        literal("alse");
-        return newToken("boolean", false);
-      case "-":
-      case "+":
-        if (read() === "-") {
-          _sign = -1;
-        }
-        lexState = "sign";
-        return;
-      case ".":
-        buffer = read();
-        lexState = "decimalPointLeading";
-        return;
-      case "0":
-        buffer = read();
-        lexState = "zero";
-        return;
-      case "1":
-      case "2":
-      case "3":
-      case "4":
-      case "5":
-      case "6":
-      case "7":
-      case "8":
-      case "9":
-        buffer = read();
-        lexState = "decimalInteger";
-        return;
-      case "I":
-        read();
-        literal("nfinity");
-        return newToken("numeric", Infinity);
-      case "N":
-        read();
-        literal("aN");
-        return newToken("numeric", NaN);
-      case '"':
-      case "'":
-        doubleQuote = read() === '"';
-        buffer = "";
-        lexState = "string";
-        return;
-    }
-    throw invalidChar(read());
-  }, identifierNameStartEscape: function identifierNameStartEscape() {
-    if (c !== "u") {
+      }
+      read();
+      const u = unicodeEscape();
+      switch (u) {
+        case "$":
+        case "_":
+        case "\u200C":
+        case "\u200D":
+          break;
+        default:
+          if (!util.isIdContinueChar(u)) {
+            throw invalidIdentifier();
+          }
+          break;
+      }
+      buffer += u;
+      lexState = "identifierName";
+    },
+    sign() {
+      switch (c) {
+        case ".":
+          buffer = read();
+          lexState = "decimalPointLeading";
+          return;
+        case "0":
+          buffer = read();
+          lexState = "zero";
+          return;
+        case "1":
+        case "2":
+        case "3":
+        case "4":
+        case "5":
+        case "6":
+        case "7":
+        case "8":
+        case "9":
+          buffer = read();
+          lexState = "decimalInteger";
+          return;
+        case "I":
+          read();
+          literal("nfinity");
+          return newToken("numeric", sign * Infinity);
+        case "N":
+          read();
+          literal("aN");
+          return newToken("numeric", NaN);
+      }
       throw invalidChar(read());
-    }
-    read();
-    var u = unicodeEscape();
-    switch (u) {
-      case "$":
-      case "_":
-        break;
-      default:
-        if (!util.isIdStartChar(u)) {
-          throw invalidIdentifier();
-        }
-        break;
-    }
-    buffer += u;
-    lexState = "identifierName";
-  }, identifierName: function identifierName() {
-    switch (c) {
-      case "$":
-      case "_":
-      case "\u200C":
-      case "\u200D":
+    },
+    zero() {
+      switch (c) {
+        case ".":
+          buffer += read();
+          lexState = "decimalPoint";
+          return;
+        case "e":
+        case "E":
+          buffer += read();
+          lexState = "decimalExponent";
+          return;
+        case "x":
+        case "X":
+          buffer += read();
+          lexState = "hexadecimal";
+          return;
+      }
+      return newToken("numeric", sign * 0);
+    },
+    decimalInteger() {
+      switch (c) {
+        case ".":
+          buffer += read();
+          lexState = "decimalPoint";
+          return;
+        case "e":
+        case "E":
+          buffer += read();
+          lexState = "decimalExponent";
+          return;
+      }
+      if (util.isDigit(c)) {
         buffer += read();
         return;
-      case "\\":
-        read();
-        lexState = "identifierNameEscape";
+      }
+      return newToken("numeric", sign * Number(buffer));
+    },
+    decimalPointLeading() {
+      if (util.isDigit(c)) {
+        buffer += read();
+        lexState = "decimalFraction";
         return;
-    }
-    if (util.isIdContinueChar(c)) {
-      buffer += read();
-      return;
-    }
-    return newToken("identifier", buffer);
-  }, identifierNameEscape: function identifierNameEscape() {
-    if (c !== "u") {
+      }
       throw invalidChar(read());
-    }
-    read();
-    var u = unicodeEscape();
-    switch (u) {
-      case "$":
-      case "_":
-      case "\u200C":
-      case "\u200D":
-        break;
-      default:
-        if (!util.isIdContinueChar(u)) {
-          throw invalidIdentifier();
-        }
-        break;
-    }
-    buffer += u;
-    lexState = "identifierName";
-  }, sign: function sign() {
-    switch (c) {
-      case ".":
-        buffer = read();
-        lexState = "decimalPointLeading";
-        return;
-      case "0":
-        buffer = read();
-        lexState = "zero";
-        return;
-      case "1":
-      case "2":
-      case "3":
-      case "4":
-      case "5":
-      case "6":
-      case "7":
-      case "8":
-      case "9":
-        buffer = read();
-        lexState = "decimalInteger";
-        return;
-      case "I":
-        read();
-        literal("nfinity");
-        return newToken("numeric", _sign * Infinity);
-      case "N":
-        read();
-        literal("aN");
-        return newToken("numeric", NaN);
-    }
-    throw invalidChar(read());
-  }, zero: function zero() {
-    switch (c) {
-      case ".":
+    },
+    decimalPoint() {
+      switch (c) {
+        case "e":
+        case "E":
+          buffer += read();
+          lexState = "decimalExponent";
+          return;
+      }
+      if (util.isDigit(c)) {
         buffer += read();
-        lexState = "decimalPoint";
+        lexState = "decimalFraction";
         return;
-      case "e":
-      case "E":
+      }
+      return newToken("numeric", sign * Number(buffer));
+    },
+    decimalFraction() {
+      switch (c) {
+        case "e":
+        case "E":
+          buffer += read();
+          lexState = "decimalExponent";
+          return;
+      }
+      if (util.isDigit(c)) {
         buffer += read();
-        lexState = "decimalExponent";
         return;
-      case "x":
-      case "X":
+      }
+      return newToken("numeric", sign * Number(buffer));
+    },
+    decimalExponent() {
+      switch (c) {
+        case "+":
+        case "-":
+          buffer += read();
+          lexState = "decimalExponentSign";
+          return;
+      }
+      if (util.isDigit(c)) {
         buffer += read();
-        lexState = "hexadecimal";
+        lexState = "decimalExponentInteger";
         return;
-    }
-    return newToken("numeric", _sign * 0);
-  }, decimalInteger: function decimalInteger() {
-    switch (c) {
-      case ".":
+      }
+      throw invalidChar(read());
+    },
+    decimalExponentSign() {
+      if (util.isDigit(c)) {
         buffer += read();
-        lexState = "decimalPoint";
+        lexState = "decimalExponentInteger";
         return;
-      case "e":
-      case "E":
+      }
+      throw invalidChar(read());
+    },
+    decimalExponentInteger() {
+      if (util.isDigit(c)) {
         buffer += read();
-        lexState = "decimalExponent";
         return;
-    }
-    if (util.isDigit(c)) {
-      buffer += read();
-      return;
-    }
-    return newToken("numeric", _sign * Number(buffer));
-  }, decimalPointLeading: function decimalPointLeading() {
-    if (util.isDigit(c)) {
-      buffer += read();
-      lexState = "decimalFraction";
-      return;
-    }
-    throw invalidChar(read());
-  }, decimalPoint: function decimalPoint() {
-    switch (c) {
-      case "e":
-      case "E":
+      }
+      return newToken("numeric", sign * Number(buffer));
+    },
+    hexadecimal() {
+      if (util.isHexDigit(c)) {
         buffer += read();
-        lexState = "decimalExponent";
+        lexState = "hexadecimalInteger";
         return;
-    }
-    if (util.isDigit(c)) {
-      buffer += read();
-      lexState = "decimalFraction";
-      return;
-    }
-    return newToken("numeric", _sign * Number(buffer));
-  }, decimalFraction: function decimalFraction() {
-    switch (c) {
-      case "e":
-      case "E":
+      }
+      throw invalidChar(read());
+    },
+    hexadecimalInteger() {
+      if (util.isHexDigit(c)) {
         buffer += read();
-        lexState = "decimalExponent";
         return;
-    }
-    if (util.isDigit(c)) {
+      }
+      return newToken("numeric", sign * Number(buffer));
+    },
+    string() {
+      switch (c) {
+        case "\\":
+          read();
+          buffer += escape();
+          return;
+        case '"':
+          if (doubleQuote) {
+            read();
+            return newToken("string", buffer);
+          }
+          buffer += read();
+          return;
+        case "'":
+          if (!doubleQuote) {
+            read();
+            return newToken("string", buffer);
+          }
+          buffer += read();
+          return;
+        case "\n":
+        case "\r":
+          throw invalidChar(read());
+        case "\u2028":
+        case "\u2029":
+          separatorChar(c);
+          break;
+        case void 0:
+          throw invalidChar(read());
+      }
       buffer += read();
-      return;
-    }
-    return newToken("numeric", _sign * Number(buffer));
-  }, decimalExponent: function decimalExponent() {
-    switch (c) {
-      case "+":
-      case "-":
+    },
+    start() {
+      switch (c) {
+        case "{":
+        case "[":
+          return newToken("punctuator", read());
+      }
+      lexState = "value";
+    },
+    beforePropertyName() {
+      switch (c) {
+        case "$":
+        case "_":
+          buffer = read();
+          lexState = "identifierName";
+          return;
+        case "\\":
+          read();
+          lexState = "identifierNameStartEscape";
+          return;
+        case "}":
+          return newToken("punctuator", read());
+        case '"':
+        case "'":
+          doubleQuote = read() === '"';
+          lexState = "string";
+          return;
+      }
+      if (util.isIdStartChar(c)) {
         buffer += read();
-        lexState = "decimalExponentSign";
+        lexState = "identifierName";
         return;
-    }
-    if (util.isDigit(c)) {
-      buffer += read();
-      lexState = "decimalExponentInteger";
-      return;
-    }
-    throw invalidChar(read());
-  }, decimalExponentSign: function decimalExponentSign() {
-    if (util.isDigit(c)) {
-      buffer += read();
-      lexState = "decimalExponentInteger";
-      return;
-    }
-    throw invalidChar(read());
-  }, decimalExponentInteger: function decimalExponentInteger() {
-    if (util.isDigit(c)) {
-      buffer += read();
-      return;
-    }
-    return newToken("numeric", _sign * Number(buffer));
-  }, hexadecimal: function hexadecimal() {
-    if (util.isHexDigit(c)) {
-      buffer += read();
-      lexState = "hexadecimalInteger";
-      return;
-    }
-    throw invalidChar(read());
-  }, hexadecimalInteger: function hexadecimalInteger() {
-    if (util.isHexDigit(c)) {
-      buffer += read();
-      return;
-    }
-    return newToken("numeric", _sign * Number(buffer));
-  }, string: function string() {
-    switch (c) {
-      case "\\":
-        read();
-        buffer += escape();
-        return;
-      case '"':
-        if (doubleQuote) {
-          read();
-          return newToken("string", buffer);
-        }
-        buffer += read();
-        return;
-      case "'":
-        if (!doubleQuote) {
-          read();
-          return newToken("string", buffer);
-        }
-        buffer += read();
-        return;
-      case "\n":
-      case "\r":
-        throw invalidChar(read());
-      case "\u2028":
-      case "\u2029":
-        separatorChar(c);
-        break;
-      case void 0:
-        throw invalidChar(read());
-    }
-    buffer += read();
-  }, start: function start() {
-    switch (c) {
-      case "{":
-      case "[":
-        return newToken("punctuator", read());
-    }
-    lexState = "value";
-  }, beforePropertyName: function beforePropertyName() {
-    switch (c) {
-      case "$":
-      case "_":
-        buffer = read();
-        lexState = "identifierName";
-        return;
-      case "\\":
-        read();
-        lexState = "identifierNameStartEscape";
-        return;
-      case "}":
-        return newToken("punctuator", read());
-      case '"':
-      case "'":
-        doubleQuote = read() === '"';
-        lexState = "string";
-        return;
-    }
-    if (util.isIdStartChar(c)) {
-      buffer += read();
-      lexState = "identifierName";
-      return;
-    }
-    throw invalidChar(read());
-  }, afterPropertyName: function afterPropertyName() {
-    if (c === ":") {
-      return newToken("punctuator", read());
-    }
-    throw invalidChar(read());
-  }, beforePropertyValue: function beforePropertyValue() {
-    lexState = "value";
-  }, afterPropertyValue: function afterPropertyValue() {
-    switch (c) {
-      case ",":
-      case "}":
+      }
+      throw invalidChar(read());
+    },
+    afterPropertyName() {
+      if (c === ":") {
         return newToken("punctuator", read());
-    }
-    throw invalidChar(read());
-  }, beforeArrayValue: function beforeArrayValue() {
-    if (c === "]") {
-      return newToken("punctuator", read());
-    }
-    lexState = "value";
-  }, afterArrayValue: function afterArrayValue() {
-    switch (c) {
-      case ",":
-      case "]":
+      }
+      throw invalidChar(read());
+    },
+    beforePropertyValue() {
+      lexState = "value";
+    },
+    afterPropertyValue() {
+      switch (c) {
+        case ",":
+        case "}":
+          return newToken("punctuator", read());
+      }
+      throw invalidChar(read());
+    },
+    beforeArrayValue() {
+      if (c === "]") {
         return newToken("punctuator", read());
+      }
+      lexState = "value";
+    },
+    afterArrayValue() {
+      switch (c) {
+        case ",":
+        case "]":
+          return newToken("punctuator", read());
+      }
+      throw invalidChar(read());
+    },
+    end() {
+      throw invalidChar(read());
     }
-    throw invalidChar(read());
-  }, end: function end() {
-    throw invalidChar(read());
-  }};
+  };
   function newToken(type, value) {
-    return {type, value, line, column};
+    return {
+      type,
+      value,
+      line,
+      column
+    };
   }
   function literal(s) {
-    var _iteratorNormalCompletion = true;
-    var _didIteratorError = false;
-    var _iteratorError = void 0;
-    try {
-      for (var _iterator = s[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
-        var _c = _step.value;
-        var p = peek();
-        if (p !== _c) {
-          throw invalidChar(read());
-        }
-        read();
-      }
-    } catch (err) {
-      _didIteratorError = true;
-      _iteratorError = err;
-    } finally {
-      try {
-        if (!_iteratorNormalCompletion && _iterator.return) {
-          _iterator.return();
-        }
-      } finally {
-        if (_didIteratorError) {
-          throw _iteratorError;
-        }
+    for (const c2 of s) {
+      const p = peek();
+      if (p !== c2) {
+        throw invalidChar(read());
       }
+      read();
     }
   }
   function escape() {
-    var c2 = peek();
+    const c2 = peek();
     switch (c2) {
       case "b":
         read();
@@ -3652,8 +3656,8 @@ var require_parse = __commonJS((exports, module2) => {
     return read();
   }
   function hexEscape() {
-    var buffer2 = "";
-    var c2 = peek();
+    let buffer2 = "";
+    let c2 = peek();
     if (!util.isHexDigit(c2)) {
       throw invalidChar(read());
     }
@@ -3666,80 +3670,89 @@ var require_parse = __commonJS((exports, module2) => {
     return String.fromCodePoint(parseInt(buffer2, 16));
   }
   function unicodeEscape() {
-    var buffer2 = "";
-    var count = 4;
+    let buffer2 = "";
+    let count = 4;
     while (count-- > 0) {
-      var _c2 = peek();
-      if (!util.isHexDigit(_c2)) {
+      const c2 = peek();
+      if (!util.isHexDigit(c2)) {
         throw invalidChar(read());
       }
       buffer2 += read();
     }
     return String.fromCodePoint(parseInt(buffer2, 16));
   }
-  var parseStates = {start: function start() {
-    if (token.type === "eof") {
-      throw invalidEOF();
-    }
-    push();
-  }, beforePropertyName: function beforePropertyName() {
-    switch (token.type) {
-      case "identifier":
-      case "string":
-        key = token.value;
-        parseState = "afterPropertyName";
-        return;
-      case "punctuator":
-        pop();
-        return;
-      case "eof":
+  var parseStates = {
+    start() {
+      if (token.type === "eof") {
         throw invalidEOF();
-    }
-  }, afterPropertyName: function afterPropertyName() {
-    if (token.type === "eof") {
-      throw invalidEOF();
-    }
-    parseState = "beforePropertyValue";
-  }, beforePropertyValue: function beforePropertyValue() {
-    if (token.type === "eof") {
-      throw invalidEOF();
-    }
-    push();
-  }, beforeArrayValue: function beforeArrayValue() {
-    if (token.type === "eof") {
-      throw invalidEOF();
-    }
-    if (token.type === "punctuator" && token.value === "]") {
-      pop();
-      return;
-    }
-    push();
-  }, afterPropertyValue: function afterPropertyValue() {
-    if (token.type === "eof") {
-      throw invalidEOF();
-    }
-    switch (token.value) {
-      case ",":
-        parseState = "beforePropertyName";
-        return;
-      case "}":
+      }
+      push();
+    },
+    beforePropertyName() {
+      switch (token.type) {
+        case "identifier":
+        case "string":
+          key = token.value;
+          parseState = "afterPropertyName";
+          return;
+        case "punctuator":
+          pop();
+          return;
+        case "eof":
+          throw invalidEOF();
+      }
+    },
+    afterPropertyName() {
+      if (token.type === "eof") {
+        throw invalidEOF();
+      }
+      parseState = "beforePropertyValue";
+    },
+    beforePropertyValue() {
+      if (token.type === "eof") {
+        throw invalidEOF();
+      }
+      push();
+    },
+    beforeArrayValue() {
+      if (token.type === "eof") {
+        throw invalidEOF();
+      }
+      if (token.type === "punctuator" && token.value === "]") {
         pop();
-    }
-  }, afterArrayValue: function afterArrayValue() {
-    if (token.type === "eof") {
-      throw invalidEOF();
-    }
-    switch (token.value) {
-      case ",":
-        parseState = "beforeArrayValue";
         return;
-      case "]":
-        pop();
+      }
+      push();
+    },
+    afterPropertyValue() {
+      if (token.type === "eof") {
+        throw invalidEOF();
+      }
+      switch (token.value) {
+        case ",":
+          parseState = "beforePropertyName";
+          return;
+        case "}":
+          pop();
+      }
+    },
+    afterArrayValue() {
+      if (token.type === "eof") {
+        throw invalidEOF();
+      }
+      switch (token.value) {
+        case ",":
+          parseState = "beforeArrayValue";
+          return;
+        case "]":
+          pop();
+      }
+    },
+    end() {
     }
-  }, end: function end() {
-  }};
+  };
   function push() {
-    var value = void 0;
+    let value;
     switch (token.type) {
       case "punctuator":
         switch (token.value) {
@@ -3761,14 +3774,19 @@ var require_parse = __commonJS((exports, module2) => {
     if (root === void 0) {
       root = value;
     } else {
-      var parent = stack[stack.length - 1];
+      const parent = stack[stack.length - 1];
       if (Array.isArray(parent)) {
         parent.push(value);
       } else {
-        parent[key] = value;
+        Object.defineProperty(parent, key, {
+          value,
+          writable: true,
+          enumerable: true,
+          configurable: true
+        });
       }
     }
-    if (value !== null && (typeof value === "undefined" ? "undefined" : _typeof(value)) === "object") {
+    if (value !== null && typeof value === "object") {
       stack.push(value);
       if (Array.isArray(value)) {
         parseState = "beforeArrayValue";
@@ -3776,7 +3794,7 @@ var require_parse = __commonJS((exports, module2) => {
         parseState = "beforePropertyName";
       }
     } else {
-      var current = stack[stack.length - 1];
+      const current = stack[stack.length - 1];
       if (current == null) {
         parseState = "end";
       } else if (Array.isArray(current)) {
@@ -3788,7 +3806,7 @@ var require_parse = __commonJS((exports, module2) => {
   }
   function pop() {
     stack.pop();
-    var current = stack[stack.length - 1];
+    const current = stack[stack.length - 1];
     if (current == null) {
       parseState = "end";
     } else if (Array.isArray(current)) {
@@ -3799,75 +3817,63 @@ var require_parse = __commonJS((exports, module2) => {
   }
   function invalidChar(c2) {
     if (c2 === void 0) {
-      return syntaxError("JSON5: invalid end of input at " + line + ":" + column);
+      return syntaxError(`JSON5: invalid end of input at ${line}:${column}`);
     }
-    return syntaxError("JSON5: invalid character '" + formatChar(c2) + "' at " + line + ":" + column);
+    return syntaxError(`JSON5: invalid character '${formatChar(c2)}' at ${line}:${column}`);
   }
   function invalidEOF() {
-    return syntaxError("JSON5: invalid end of input at " + line + ":" + column);
+    return syntaxError(`JSON5: invalid end of input at ${line}:${column}`);
   }
   function invalidIdentifier() {
     column -= 5;
-    return syntaxError("JSON5: invalid identifier character at " + line + ":" + column);
+    return syntaxError(`JSON5: invalid identifier character at ${line}:${column}`);
   }
   function separatorChar(c2) {
-    console.warn("JSON5: '" + c2 + "' is not valid ECMAScript; consider escaping");
+    console.warn(`JSON5: '${formatChar(c2)}' in strings is not valid ECMAScript; consider escaping`);
   }
   function formatChar(c2) {
-    var replacements = {"'": "\\'", '"': '\\"', "\\": "\\\\", "\b": "\\b", "\f": "\\f", "\n": "\\n", "\r": "\\r", "	": "\\t", "\v": "\\v", "\0": "\\0", "\u2028": "\\u2028", "\u2029": "\\u2029"};
+    const replacements = {
+      "'": "\\'",
+      '"': '\\"',
+      "\\": "\\\\",
+      "\b": "\\b",
+      "\f": "\\f",
+      "\n": "\\n",
+      "\r": "\\r",
+      "	": "\\t",
+      "\v": "\\v",
+      "\0": "\\0",
+      "\u2028": "\\u2028",
+      "\u2029": "\\u2029"
+    };
     if (replacements[c2]) {
       return replacements[c2];
     }
     if (c2 < " ") {
-      var hexString = c2.charCodeAt(0).toString(16);
+      const hexString = c2.charCodeAt(0).toString(16);
       return "\\x" + ("00" + hexString).substring(hexString.length);
     }
     return c2;
   }
   function syntaxError(message) {
-    var err = new SyntaxError(message);
+    const err = new SyntaxError(message);
     err.lineNumber = line;
     err.columnNumber = column;
     return err;
   }
-  module2.exports = exports["default"];
 });
 
-// node_modules/.pnpm/json5@1.0.1/node_modules/json5/lib/stringify.js
+// node_modules/.pnpm/json5@2.2.3/node_modules/json5/lib/stringify.js
 var require_stringify = __commonJS((exports, module2) => {
-  "use strict";
-  Object.defineProperty(exports, "__esModule", {value: true});
-  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
-    return typeof obj;
-  } : function(obj) {
-    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
-  };
-  exports.default = stringify;
-  var _util = require_util2();
-  var util = _interopRequireWildcard(_util);
-  function _interopRequireWildcard(obj) {
-    if (obj && obj.__esModule) {
-      return obj;
-    } else {
-      var newObj = {};
-      if (obj != null) {
-        for (var key in obj) {
-          if (Object.prototype.hasOwnProperty.call(obj, key))
-            newObj[key] = obj[key];
-        }
-      }
-      newObj.default = obj;
-      return newObj;
-    }
-  }
-  function stringify(value, replacer, space) {
-    var stack = [];
-    var indent = "";
-    var propertyList = void 0;
-    var replacerFunc = void 0;
-    var gap = "";
-    var quote = void 0;
-    if (replacer != null && (typeof replacer === "undefined" ? "undefined" : _typeof(replacer)) === "object" && !Array.isArray(replacer)) {
+  var util = require_util2();
+  module2.exports = function stringify(value, replacer, space) {
+    const stack = [];
+    let indent = "";
+    let propertyList;
+    let replacerFunc;
+    let gap = "";
+    let quote;
+    if (replacer != null && typeof replacer === "object" && !Array.isArray(replacer)) {
       space = replacer.space;
       quote = replacer.quote;
       replacer = replacer.replacer;
@@ -3876,34 +3882,15 @@ var require_stringify = __commonJS((exports, module2) => {
       replacerFunc = replacer;
     } else if (Array.isArray(replacer)) {
       propertyList = [];
-      var _iteratorNormalCompletion = true;
-      var _didIteratorError = false;
-      var _iteratorError = void 0;
-      try {
-        for (var _iterator = replacer[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
-          var v = _step.value;
-          var item = void 0;
-          if (typeof v === "string") {
-            item = v;
-          } else if (typeof v === "number" || v instanceof String || v instanceof Number) {
-            item = String(v);
-          }
-          if (item !== void 0 && propertyList.indexOf(item) < 0) {
-            propertyList.push(item);
-          }
+      for (const v of replacer) {
+        let item;
+        if (typeof v === "string") {
+          item = v;
+        } else if (typeof v === "number" || v instanceof String || v instanceof Number) {
+          item = String(v);
         }
-      } catch (err) {
-        _didIteratorError = true;
-        _iteratorError = err;
-      } finally {
-        try {
-          if (!_iteratorNormalCompletion && _iterator.return) {
-            _iterator.return();
-          }
-        } finally {
-          if (_didIteratorError) {
-            throw _iteratorError;
-          }
+        if (item !== void 0 && propertyList.indexOf(item) < 0) {
+          propertyList.push(item);
         }
       }
     }
@@ -3922,7 +3909,7 @@ var require_stringify = __commonJS((exports, module2) => {
     }
     return serializeProperty("", {"": value});
     function serializeProperty(key, holder) {
-      var value2 = holder[key];
+      let value2 = holder[key];
       if (value2 != null) {
         if (typeof value2.toJSON5 === "function") {
           value2 = value2.toJSON5(key);
@@ -3954,56 +3941,57 @@ var require_stringify = __commonJS((exports, module2) => {
       if (typeof value2 === "number") {
         return String(value2);
       }
-      if ((typeof value2 === "undefined" ? "undefined" : _typeof(value2)) === "object") {
+      if (typeof value2 === "object") {
         return Array.isArray(value2) ? serializeArray(value2) : serializeObject(value2);
       }
       return void 0;
     }
     function quoteString(value2) {
-      var quotes = {"'": 0.1, '"': 0.2};
-      var replacements = {"'": "\\'", '"': '\\"', "\\": "\\\\", "\b": "\\b", "\f": "\\f", "\n": "\\n", "\r": "\\r", "	": "\\t", "\v": "\\v", "\0": "\\0", "\u2028": "\\u2028", "\u2029": "\\u2029"};
-      var product = "";
-      var _iteratorNormalCompletion2 = true;
-      var _didIteratorError2 = false;
-      var _iteratorError2 = void 0;
-      try {
-        for (var _iterator2 = value2[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
-          var c = _step2.value;
-          switch (c) {
-            case "'":
-            case '"':
-              quotes[c]++;
-              product += c;
-              continue;
-          }
-          if (replacements[c]) {
-            product += replacements[c];
-            continue;
-          }
-          if (c < " ") {
-            var hexString = c.charCodeAt(0).toString(16);
-            product += "\\x" + ("00" + hexString).substring(hexString.length);
+      const quotes = {
+        "'": 0.1,
+        '"': 0.2
+      };
+      const replacements = {
+        "'": "\\'",
+        '"': '\\"',
+        "\\": "\\\\",
+        "\b": "\\b",
+        "\f": "\\f",
+        "\n": "\\n",
+        "\r": "\\r",
+        "	": "\\t",
+        "\v": "\\v",
+        "\0": "\\0",
+        "\u2028": "\\u2028",
+        "\u2029": "\\u2029"
+      };
+      let product = "";
+      for (let i = 0; i < value2.length; i++) {
+        const c = value2[i];
+        switch (c) {
+          case "'":
+          case '"':
+            quotes[c]++;
+            product += c;
             continue;
-          }
-          product += c;
+          case "\0":
+            if (util.isDigit(value2[i + 1])) {
+              product += "\\x00";
+              continue;
+            }
         }
-      } catch (err) {
-        _didIteratorError2 = true;
-        _iteratorError2 = err;
-      } finally {
-        try {
-          if (!_iteratorNormalCompletion2 && _iterator2.return) {
-            _iterator2.return();
-          }
-        } finally {
-          if (_didIteratorError2) {
-            throw _iteratorError2;
-          }
+        if (replacements[c]) {
+          product += replacements[c];
+          continue;
         }
+        if (c < " ") {
+          let hexString = c.charCodeAt(0).toString(16);
+          product += "\\x" + ("00" + hexString).substring(hexString.length);
+          continue;
+        }
+        product += c;
       }
-      var quoteChar = quote || Object.keys(quotes).reduce(function(a, b) {
-        return quotes[a] < quotes[b] ? a : b;
-      });
+      const quoteChar = quote || Object.keys(quotes).reduce((a, b) => quotes[a] < quotes[b] ? a : b);
       product = product.replace(new RegExp(quoteChar, "g"), replacements[quoteChar]);
       return quoteChar + product + quoteChar;
     }
@@ -4012,50 +4000,31 @@ var require_stringify = __commonJS((exports, module2) => {
         throw TypeError("Converting circular structure to JSON5");
       }
       stack.push(value2);
-      var stepback = indent;
+      let stepback = indent;
       indent = indent + gap;
-      var keys = propertyList || Object.keys(value2);
-      var partial = [];
-      var _iteratorNormalCompletion3 = true;
-      var _didIteratorError3 = false;
-      var _iteratorError3 = void 0;
-      try {
-        for (var _iterator3 = keys[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
-          var key = _step3.value;
-          var propertyString = serializeProperty(key, value2);
-          if (propertyString !== void 0) {
-            var member = serializeKey(key) + ":";
-            if (gap !== "") {
-              member += " ";
-            }
-            member += propertyString;
-            partial.push(member);
-          }
-        }
-      } catch (err) {
-        _didIteratorError3 = true;
-        _iteratorError3 = err;
-      } finally {
-        try {
-          if (!_iteratorNormalCompletion3 && _iterator3.return) {
-            _iterator3.return();
-          }
-        } finally {
-          if (_didIteratorError3) {
-            throw _iteratorError3;
+      let keys = propertyList || Object.keys(value2);
+      let partial = [];
+      for (const key of keys) {
+        const propertyString = serializeProperty(key, value2);
+        if (propertyString !== void 0) {
+          let member = serializeKey(key) + ":";
+          if (gap !== "") {
+            member += " ";
           }
+          member += propertyString;
+          partial.push(member);
         }
       }
-      var final = void 0;
+      let final;
       if (partial.length === 0) {
         final = "{}";
       } else {
-        var properties = void 0;
+        let properties;
         if (gap === "") {
           properties = partial.join(",");
           final = "{" + properties + "}";
         } else {
-          var separator = ",\n" + indent;
+          let separator = ",\n" + indent;
           properties = partial.join(separator);
           final = "{\n" + indent + properties + ",\n" + stepback + "}";
         }
@@ -4068,11 +4037,11 @@ var require_stringify = __commonJS((exports, module2) => {
       if (key.length === 0) {
         return quoteString(key, true);
       }
-      var firstChar = String.fromCodePoint(key.codePointAt(0));
+      const firstChar = String.fromCodePoint(key.codePointAt(0));
       if (!util.isIdStartChar(firstChar)) {
         return quoteString(key, true);
       }
-      for (var i = firstChar.length; i < key.length; i++) {
+      for (let i = firstChar.length; i < key.length; i++) {
         if (!util.isIdContinueChar(String.fromCodePoint(key.codePointAt(i)))) {
           return quoteString(key, true);
         }
@@ -4084,47 +4053,42 @@ var require_stringify = __commonJS((exports, module2) => {
         throw TypeError("Converting circular structure to JSON5");
       }
       stack.push(value2);
-      var stepback = indent;
+      let stepback = indent;
       indent = indent + gap;
-      var partial = [];
-      for (var i = 0; i < value2.length; i++) {
-        var propertyString = serializeProperty(String(i), value2);
+      let partial = [];
+      for (let i = 0; i < value2.length; i++) {
+        const propertyString = serializeProperty(String(i), value2);
         partial.push(propertyString !== void 0 ? propertyString : "null");
       }
-      var final = void 0;
+      let final;
       if (partial.length === 0) {
         final = "[]";
       } else {
         if (gap === "") {
-          var properties = partial.join(",");
+          let properties = partial.join(",");
           final = "[" + properties + "]";
         } else {
-          var separator = ",\n" + indent;
-          var _properties = partial.join(separator);
-          final = "[\n" + indent + _properties + ",\n" + stepback + "]";
+          let separator = ",\n" + indent;
+          let properties = partial.join(separator);
+          final = "[\n" + indent + properties + ",\n" + stepback + "]";
         }
       }
       stack.pop();
       indent = stepback;
       return final;
     }
-  }
-  module2.exports = exports["default"];
+  };
 });
 
-// node_modules/.pnpm/json5@1.0.1/node_modules/json5/lib/index.js
+// node_modules/.pnpm/json5@2.2.3/node_modules/json5/lib/index.js
 var require_lib3 = __commonJS((exports, module2) => {
-  "use strict";
-  Object.defineProperty(exports, "__esModule", {value: true});
-  var _parse = require_parse();
-  var _parse2 = _interopRequireDefault(_parse);
-  var _stringify = require_stringify();
-  var _stringify2 = _interopRequireDefault(_stringify);
-  function _interopRequireDefault(obj) {
-    return obj && obj.__esModule ? obj : {default: obj};
-  }
-  exports.default = {parse: _parse2.default, stringify: _stringify2.default};
-  module2.exports = exports["default"];
+  var parse = require_parse();
+  var stringify = require_stringify();
+  var JSON5 = {
+    parse,
+    stringify
+  };
+  module2.exports = JSON5;
 });
 
 // node_modules/.pnpm/strip-bom@3.0.0/node_modules/strip-bom/index.js
@@ -4141,19 +4105,23 @@ var require_strip_bom = __commonJS((exports, module2) => {
   };
 });
 
-// node_modules/.pnpm/tsconfig-paths@3.12.0/node_modules/tsconfig-paths/lib/tsconfig-loader.js
+// node_modules/.pnpm/tsconfig-paths@4.2.0/node_modules/tsconfig-paths/lib/tsconfig-loader.js
 var require_tsconfig_loader = __commonJS((exports) => {
   "use strict";
-  var __assign = exports && exports.__assign || Object.assign || function(t) {
-    for (var s, i = 1, n = arguments.length; i < n; i++) {
-      s = arguments[i];
-      for (var p in s)
-        if (Object.prototype.hasOwnProperty.call(s, p))
-          t[p] = s[p];
-    }
-    return t;
+  var __assign = exports && exports.__assign || function() {
+    __assign = Object.assign || function(t) {
+      for (var s, i = 1, n = arguments.length; i < n; i++) {
+        s = arguments[i];
+        for (var p in s)
+          if (Object.prototype.hasOwnProperty.call(s, p))
+            t[p] = s[p];
+      }
+      return t;
+    };
+    return __assign.apply(this, arguments);
   };
   Object.defineProperty(exports, "__esModule", {value: true});
+  exports.loadTsconfig = exports.walkForTsConfig = exports.tsConfigLoader = void 0;
   var path = require("path");
   var fs3 = require("fs");
   var JSON5 = require_lib3();
@@ -4193,19 +4161,23 @@ var require_tsconfig_loader = __commonJS((exports) => {
     var configAbsolutePath = walkForTsConfig(cwd);
     return configAbsolutePath ? path.resolve(configAbsolutePath) : void 0;
   }
-  function walkForTsConfig(directory, existsSync) {
-    if (existsSync === void 0) {
-      existsSync = fs3.existsSync;
+  function walkForTsConfig(directory, readdirSync) {
+    if (readdirSync === void 0) {
+      readdirSync = fs3.readdirSync;
     }
-    var configPath = path.join(directory, "./tsconfig.json");
-    if (existsSync(configPath)) {
-      return configPath;
+    var files = readdirSync(directory);
+    var filesToCheck = ["tsconfig.json", "jsconfig.json"];
+    for (var _i = 0, filesToCheck_1 = filesToCheck; _i < filesToCheck_1.length; _i++) {
+      var fileToCheck = filesToCheck_1[_i];
+      if (files.indexOf(fileToCheck) !== -1) {
+        return path.join(directory, fileToCheck);
+      }
     }
-    var parentDirectory = path.join(directory, "../");
+    var parentDirectory = path.dirname(directory);
     if (directory === parentDirectory) {
       return void 0;
     }
-    return walkForTsConfig(parentDirectory, existsSync);
+    return walkForTsConfig(parentDirectory, readdirSync);
   }
   exports.walkForTsConfig = walkForTsConfig;
   function loadTsconfig(configFilePath, existsSync, readFileSync) {
@@ -4222,46 +4194,151 @@ var require_tsconfig_loader = __commonJS((exports) => {
     }
     var configString = readFileSync(configFilePath);
     var cleanedJson = StripBom(configString);
-    var config = JSON5.parse(cleanedJson);
+    var config;
+    try {
+      config = JSON5.parse(cleanedJson);
+    } catch (e) {
+      throw new Error("".concat(configFilePath, " is malformed ").concat(e.message));
+    }
     var extendedConfig = config.extends;
     if (extendedConfig) {
-      if (typeof extendedConfig === "string" && extendedConfig.indexOf(".json") === -1) {
-        extendedConfig += ".json";
-      }
-      var currentDir = path.dirname(configFilePath);
-      var extendedConfigPath = path.join(currentDir, extendedConfig);
-      if (extendedConfig.indexOf("/") !== -1 && extendedConfig.indexOf(".") !== -1 && !existsSync(extendedConfigPath)) {
-        extendedConfigPath = path.join(currentDir, "node_modules", extendedConfig);
-      }
-      var base = loadTsconfig(extendedConfigPath, existsSync, readFileSync) || {};
-      if (base.compilerOptions && base.compilerOptions.baseUrl) {
-        var extendsDir = path.dirname(extendedConfig);
-        base.compilerOptions.baseUrl = path.join(extendsDir, base.compilerOptions.baseUrl);
+      var base = void 0;
+      if (Array.isArray(extendedConfig)) {
+        base = extendedConfig.reduce(function(currBase, extendedConfigElement) {
+          return mergeTsconfigs(currBase, loadTsconfigFromExtends(configFilePath, extendedConfigElement, existsSync, readFileSync));
+        }, {});
+      } else {
+        base = loadTsconfigFromExtends(configFilePath, extendedConfig, existsSync, readFileSync);
       }
-      return __assign({}, base, config, {compilerOptions: __assign({}, base.compilerOptions, config.compilerOptions)});
+      return mergeTsconfigs(base, config);
     }
     return config;
   }
   exports.loadTsconfig = loadTsconfig;
+  function loadTsconfigFromExtends(configFilePath, extendedConfigValue, existsSync, readFileSync) {
+    var _a;
+    if (typeof extendedConfigValue === "string" && extendedConfigValue.indexOf(".json") === -1) {
+      extendedConfigValue += ".json";
+    }
+    var currentDir = path.dirname(configFilePath);
+    var extendedConfigPath = path.join(currentDir, extendedConfigValue);
+    if (extendedConfigValue.indexOf("/") !== -1 && extendedConfigValue.indexOf(".") !== -1 && !existsSync(extendedConfigPath)) {
+      extendedConfigPath = path.join(currentDir, "node_modules", extendedConfigValue);
+    }
+    var config = loadTsconfig(extendedConfigPath, existsSync, readFileSync) || {};
+    if ((_a = config.compilerOptions) === null || _a === void 0 ? void 0 : _a.baseUrl) {
+      var extendsDir = path.dirname(extendedConfigValue);
+      config.compilerOptions.baseUrl = path.join(extendsDir, config.compilerOptions.baseUrl);
+    }
+    return config;
+  }
+  function mergeTsconfigs(base, config) {
+    base = base || {};
+    config = config || {};
+    return __assign(__assign(__assign({}, base), config), {compilerOptions: __assign(__assign({}, base.compilerOptions), config.compilerOptions)});
+  }
+});
+
+// node_modules/.pnpm/tsconfig-paths@4.2.0/node_modules/tsconfig-paths/lib/config-loader.js
+var require_config_loader = __commonJS((exports) => {
+  "use strict";
+  Object.defineProperty(exports, "__esModule", {value: true});
+  exports.configLoader = exports.loadConfig = void 0;
+  var TsConfigLoader2 = require_tsconfig_loader();
+  var path = require("path");
+  function loadConfig2(cwd) {
+    if (cwd === void 0) {
+      cwd = process.cwd();
+    }
+    return configLoader({cwd});
+  }
+  exports.loadConfig = loadConfig2;
+  function configLoader(_a) {
+    var cwd = _a.cwd, explicitParams = _a.explicitParams, _b = _a.tsConfigLoader, tsConfigLoader = _b === void 0 ? TsConfigLoader2.tsConfigLoader : _b;
+    if (explicitParams) {
+      var absoluteBaseUrl = path.isAbsolute(explicitParams.baseUrl) ? explicitParams.baseUrl : path.join(cwd, explicitParams.baseUrl);
+      return {
+        resultType: "success",
+        configFileAbsolutePath: "",
+        baseUrl: explicitParams.baseUrl,
+        absoluteBaseUrl,
+        paths: explicitParams.paths,
+        mainFields: explicitParams.mainFields,
+        addMatchAll: explicitParams.addMatchAll
+      };
+    }
+    var loadResult = tsConfigLoader({
+      cwd,
+      getEnv: function(key) {
+        return process.env[key];
+      }
+    });
+    if (!loadResult.tsConfigPath) {
+      return {
+        resultType: "failed",
+        message: "Couldn't find tsconfig.json"
+      };
+    }
+    return {
+      resultType: "success",
+      configFileAbsolutePath: loadResult.tsConfigPath,
+      baseUrl: loadResult.baseUrl,
+      absoluteBaseUrl: path.resolve(path.dirname(loadResult.tsConfigPath), loadResult.baseUrl || ""),
+      paths: loadResult.paths || {},
+      addMatchAll: loadResult.baseUrl !== void 0
+    };
+  }
+  exports.configLoader = configLoader;
 });
 
-// node_modules/.pnpm/minimist@1.2.5/node_modules/minimist/index.js
+// node_modules/.pnpm/minimist@1.2.8/node_modules/minimist/index.js
 var require_minimist = __commonJS((exports, module2) => {
+  "use strict";
+  function hasKey(obj, keys) {
+    var o = obj;
+    keys.slice(0, -1).forEach(function(key2) {
+      o = o[key2] || {};
+    });
+    var key = keys[keys.length - 1];
+    return key in o;
+  }
+  function isNumber(x) {
+    if (typeof x === "number") {
+      return true;
+    }
+    if (/^0x[0-9a-f]+$/i.test(x)) {
+      return true;
+    }
+    return /^[-+]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(x);
+  }
+  function isConstructorOrProto(obj, key) {
+    return key === "constructor" && typeof obj[key] === "function" || key === "__proto__";
+  }
   module2.exports = function(args, opts) {
-    if (!opts)
+    if (!opts) {
       opts = {};
-    var flags = {bools: {}, strings: {}, unknownFn: null};
-    if (typeof opts["unknown"] === "function") {
-      flags.unknownFn = opts["unknown"];
     }
-    if (typeof opts["boolean"] === "boolean" && opts["boolean"]) {
+    var flags = {
+      bools: {},
+      strings: {},
+      unknownFn: null
+    };
+    if (typeof opts.unknown === "function") {
+      flags.unknownFn = opts.unknown;
+    }
+    if (typeof opts.boolean === "boolean" && opts.boolean) {
       flags.allBools = true;
     } else {
-      [].concat(opts["boolean"]).filter(Boolean).forEach(function(key2) {
+      [].concat(opts.boolean).filter(Boolean).forEach(function(key2) {
         flags.bools[key2] = true;
       });
     }
     var aliases = {};
+    function aliasIsBoolean(key2) {
+      return aliases[key2].some(function(x) {
+        return flags.bools[x];
+      });
+    }
     Object.keys(opts.alias || {}).forEach(function(key2) {
       aliases[key2] = [].concat(opts.alias[key2]);
       aliases[key2].forEach(function(x) {
@@ -4273,89 +4350,96 @@ var require_minimist = __commonJS((exports, module2) => {
     [].concat(opts.string).filter(Boolean).forEach(function(key2) {
       flags.strings[key2] = true;
       if (aliases[key2]) {
-        flags.strings[aliases[key2]] = true;
+        [].concat(aliases[key2]).forEach(function(k) {
+          flags.strings[k] = true;
+        });
       }
     });
-    var defaults = opts["default"] || {};
+    var defaults = opts.default || {};
     var argv = {_: []};
-    Object.keys(flags.bools).forEach(function(key2) {
-      setArg(key2, defaults[key2] === void 0 ? false : defaults[key2]);
-    });
-    var notFlags = [];
-    if (args.indexOf("--") !== -1) {
-      notFlags = args.slice(args.indexOf("--") + 1);
-      args = args.slice(0, args.indexOf("--"));
-    }
     function argDefined(key2, arg2) {
       return flags.allBools && /^--[^=]+$/.test(arg2) || flags.strings[key2] || flags.bools[key2] || aliases[key2];
     }
-    function setArg(key2, val, arg2) {
-      if (arg2 && flags.unknownFn && !argDefined(key2, arg2)) {
-        if (flags.unknownFn(arg2) === false)
-          return;
-      }
-      var value2 = !flags.strings[key2] && isNumber(val) ? Number(val) : val;
-      setKey(argv, key2.split("."), value2);
-      (aliases[key2] || []).forEach(function(x) {
-        setKey(argv, x.split("."), value2);
-      });
-    }
     function setKey(obj, keys, value2) {
       var o = obj;
       for (var i2 = 0; i2 < keys.length - 1; i2++) {
         var key2 = keys[i2];
-        if (key2 === "__proto__")
+        if (isConstructorOrProto(o, key2)) {
           return;
-        if (o[key2] === void 0)
+        }
+        if (o[key2] === void 0) {
           o[key2] = {};
-        if (o[key2] === Object.prototype || o[key2] === Number.prototype || o[key2] === String.prototype)
+        }
+        if (o[key2] === Object.prototype || o[key2] === Number.prototype || o[key2] === String.prototype) {
           o[key2] = {};
-        if (o[key2] === Array.prototype)
+        }
+        if (o[key2] === Array.prototype) {
           o[key2] = [];
+        }
         o = o[key2];
       }
-      var key2 = keys[keys.length - 1];
-      if (key2 === "__proto__")
+      var lastKey = keys[keys.length - 1];
+      if (isConstructorOrProto(o, lastKey)) {
         return;
-      if (o === Object.prototype || o === Number.prototype || o === String.prototype)
+      }
+      if (o === Object.prototype || o === Number.prototype || o === String.prototype) {
         o = {};
-      if (o === Array.prototype)
+      }
+      if (o === Array.prototype) {
         o = [];
-      if (o[key2] === void 0 || flags.bools[key2] || typeof o[key2] === "boolean") {
-        o[key2] = value2;
-      } else if (Array.isArray(o[key2])) {
-        o[key2].push(value2);
+      }
+      if (o[lastKey] === void 0 || flags.bools[lastKey] || typeof o[lastKey] === "boolean") {
+        o[lastKey] = value2;
+      } else if (Array.isArray(o[lastKey])) {
+        o[lastKey].push(value2);
       } else {
-        o[key2] = [o[key2], value2];
+        o[lastKey] = [o[lastKey], value2];
       }
     }
-    function aliasIsBoolean(key2) {
-      return aliases[key2].some(function(x) {
-        return flags.bools[x];
+    function setArg(key2, val, arg2) {
+      if (arg2 && flags.unknownFn && !argDefined(key2, arg2)) {
+        if (flags.unknownFn(arg2) === false) {
+          return;
+        }
+      }
+      var value2 = !flags.strings[key2] && isNumber(val) ? Number(val) : val;
+      setKey(argv, key2.split("."), value2);
+      (aliases[key2] || []).forEach(function(x) {
+        setKey(argv, x.split("."), value2);
       });
     }
+    Object.keys(flags.bools).forEach(function(key2) {
+      setArg(key2, defaults[key2] === void 0 ? false : defaults[key2]);
+    });
+    var notFlags = [];
+    if (args.indexOf("--") !== -1) {
+      notFlags = args.slice(args.indexOf("--") + 1);
+      args = args.slice(0, args.indexOf("--"));
+    }
     for (var i = 0; i < args.length; i++) {
       var arg = args[i];
+      var key;
+      var next;
       if (/^--.+=/.test(arg)) {
         var m = arg.match(/^--([^=]+)=([\s\S]*)$/);
-        var key = m[1];
+        key = m[1];
         var value = m[2];
         if (flags.bools[key]) {
           value = value !== "false";
         }
         setArg(key, value, arg);
       } else if (/^--no-.+/.test(arg)) {
-        var key = arg.match(/^--no-(.+)/)[1];
+        key = arg.match(/^--no-(.+)/)[1];
         setArg(key, false, arg);
       } else if (/^--.+/.test(arg)) {
-        var key = arg.match(/^--(.+)/)[1];
-        var next = args[i + 1];
-        if (next !== void 0 && !/^-/.test(next) && !flags.bools[key] && !flags.allBools && (aliases[key] ? !aliasIsBoolean(key) : true)) {
+        key = arg.match(/^--(.+)/)[1];
+        next = args[i + 1];
+        if (next !== void 0 && !/^(-|--)[^-]/.test(next) && !flags.bools[key] && !flags.allBools && (aliases[key] ? !aliasIsBoolean(key) : true)) {
           setArg(key, next, arg);
-          i++;
+          i += 1;
         } else if (/^(true|false)$/.test(next)) {
           setArg(key, next === "true", arg);
-          i++;
+          i += 1;
         } else {
           setArg(key, flags.strings[key] ? "" : true, arg);
         }
@@ -4363,13 +4447,13 @@ var require_minimist = __commonJS((exports, module2) => {
         var letters = arg.slice(1, -1).split("");
         var broken = false;
         for (var j = 0; j < letters.length; j++) {
-          var next = arg.slice(j + 2);
+          next = arg.slice(j + 2);
           if (next === "-") {
             setArg(letters[j], next, arg);
             continue;
           }
-          if (/[A-Za-z]/.test(letters[j]) && /=/.test(next)) {
-            setArg(letters[j], next.split("=")[1], arg);
+          if (/[A-Za-z]/.test(letters[j]) && next[0] === "=") {
+            setArg(letters[j], next.slice(1), arg);
             broken = true;
             break;
           }
@@ -4386,21 +4470,21 @@ var require_minimist = __commonJS((exports, module2) => {
             setArg(letters[j], flags.strings[letters[j]] ? "" : true, arg);
           }
         }
-        var key = arg.slice(-1)[0];
+        key = arg.slice(-1)[0];
         if (!broken && key !== "-") {
           if (args[i + 1] && !/^(-|--)[^-]/.test(args[i + 1]) && !flags.bools[key] && (aliases[key] ? !aliasIsBoolean(key) : true)) {
             setArg(key, args[i + 1], arg);
-            i++;
+            i += 1;
           } else if (args[i + 1] && /^(true|false)$/.test(args[i + 1])) {
             setArg(key, args[i + 1] === "true", arg);
-            i++;
+            i += 1;
           } else {
             setArg(key, flags.strings[key] ? "" : true, arg);
           }
         }
       } else {
         if (!flags.unknownFn || flags.unknownFn(arg) !== false) {
-          argv._.push(flags.strings["_"] || !isNumber(arg) ? arg : Number(arg));
+          argv._.push(flags.strings._ || !isNumber(arg) ? arg : Number(arg));
         }
         if (opts.stopEarly) {
           argv._.push.apply(argv._, args.slice(i + 1));
@@ -4408,126 +4492,43 @@ var require_minimist = __commonJS((exports, module2) => {
         }
       }
     }
-    Object.keys(defaults).forEach(function(key2) {
-      if (!hasKey(argv, key2.split("."))) {
-        setKey(argv, key2.split("."), defaults[key2]);
-        (aliases[key2] || []).forEach(function(x) {
-          setKey(argv, x.split("."), defaults[key2]);
+    Object.keys(defaults).forEach(function(k) {
+      if (!hasKey(argv, k.split("."))) {
+        setKey(argv, k.split("."), defaults[k]);
+        (aliases[k] || []).forEach(function(x) {
+          setKey(argv, x.split("."), defaults[k]);
         });
       }
     });
     if (opts["--"]) {
-      argv["--"] = new Array();
-      notFlags.forEach(function(key2) {
-        argv["--"].push(key2);
-      });
+      argv["--"] = notFlags.slice();
     } else {
-      notFlags.forEach(function(key2) {
-        argv._.push(key2);
+      notFlags.forEach(function(k) {
+        argv._.push(k);
       });
     }
     return argv;
   };
-  function hasKey(obj, keys) {
-    var o = obj;
-    keys.slice(0, -1).forEach(function(key2) {
-      o = o[key2] || {};
-    });
-    var key = keys[keys.length - 1];
-    return key in o;
-  }
-  function isNumber(x) {
-    if (typeof x === "number")
-      return true;
-    if (/^0x[0-9a-f]+$/i.test(x))
-      return true;
-    return /^[-+]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(x);
-  }
 });
 
-// node_modules/.pnpm/tsconfig-paths@3.12.0/node_modules/tsconfig-paths/lib/options.js
-var require_options = __commonJS((exports) => {
-  "use strict";
-  Object.defineProperty(exports, "__esModule", {value: true});
-  var minimist = require_minimist();
-  var argv = minimist(process.argv.slice(2), {
-    string: ["project"],
-    alias: {
-      project: ["P"]
-    }
-  });
-  var project = argv && argv.project;
-  exports.options = {
-    cwd: project || process.cwd()
-  };
-});
-
-// node_modules/.pnpm/tsconfig-paths@3.12.0/node_modules/tsconfig-paths/lib/config-loader.js
-var require_config_loader = __commonJS((exports) => {
-  "use strict";
-  Object.defineProperty(exports, "__esModule", {value: true});
-  var TsConfigLoader = require_tsconfig_loader();
-  var path = require("path");
-  var options_1 = require_options();
-  function loadConfig2(cwd) {
-    if (cwd === void 0) {
-      cwd = options_1.options.cwd;
-    }
-    return configLoader({cwd});
-  }
-  exports.loadConfig = loadConfig2;
-  function configLoader(_a) {
-    var cwd = _a.cwd, explicitParams = _a.explicitParams, _b = _a.tsConfigLoader, tsConfigLoader = _b === void 0 ? TsConfigLoader.tsConfigLoader : _b;
-    if (explicitParams) {
-      var absoluteBaseUrl_1 = path.isAbsolute(explicitParams.baseUrl) ? explicitParams.baseUrl : path.join(cwd, explicitParams.baseUrl);
-      return {
-        resultType: "success",
-        configFileAbsolutePath: "",
-        baseUrl: explicitParams.baseUrl,
-        absoluteBaseUrl: absoluteBaseUrl_1,
-        paths: explicitParams.paths,
-        mainFields: explicitParams.mainFields,
-        addMatchAll: explicitParams.addMatchAll
-      };
-    }
-    var loadResult = tsConfigLoader({
-      cwd,
-      getEnv: function(key) {
-        return process.env[key];
-      }
-    });
-    if (!loadResult.tsConfigPath) {
-      return {
-        resultType: "failed",
-        message: "Couldn't find tsconfig.json"
-      };
-    }
-    if (!loadResult.baseUrl) {
-      return {
-        resultType: "failed",
-        message: "Missing baseUrl in compilerOptions"
-      };
-    }
-    var tsConfigDir = path.dirname(loadResult.tsConfigPath);
-    var absoluteBaseUrl = path.join(tsConfigDir, loadResult.baseUrl);
-    return {
-      resultType: "success",
-      configFileAbsolutePath: loadResult.tsConfigPath,
-      baseUrl: loadResult.baseUrl,
-      absoluteBaseUrl,
-      paths: loadResult.paths || {}
-    };
-  }
-  exports.configLoader = configLoader;
-});
-
-// node_modules/.pnpm/tsconfig-paths@3.12.0/node_modules/tsconfig-paths/lib/register.js
+// node_modules/.pnpm/tsconfig-paths@4.2.0/node_modules/tsconfig-paths/lib/register.js
 var require_register = __commonJS((exports) => {
   "use strict";
+  var __spreadArray = exports && exports.__spreadArray || function(to, from, pack) {
+    if (pack || arguments.length === 2)
+      for (var i = 0, l = from.length, ar; i < l; i++) {
+        if (ar || !(i in from)) {
+          if (!ar)
+            ar = Array.prototype.slice.call(from, 0, i);
+          ar[i] = from[i];
+        }
+      }
+    return to.concat(ar || Array.prototype.slice.call(from));
+  };
   Object.defineProperty(exports, "__esModule", {value: true});
+  exports.register = void 0;
   var match_path_sync_1 = require_match_path_sync();
   var config_loader_1 = require_config_loader();
-  var options_1 = require_options();
   var noOp2 = function() {
     return void 0;
   };
@@ -4568,16 +4569,33 @@ var require_register = __commonJS((exports) => {
     }
     return coreModules;
   }
-  function register2(explicitParams) {
-    var configLoaderResult = config_loader_1.configLoader({
-      cwd: options_1.options.cwd,
+  function register2(params) {
+    var cwd;
+    var explicitParams;
+    if (params) {
+      cwd = params.cwd;
+      if (params.baseUrl || params.paths) {
+        explicitParams = params;
+      }
+    } else {
+      var minimist = require_minimist();
+      var argv = minimist(process.argv.slice(2), {
+        string: ["project"],
+        alias: {
+          project: ["P"]
+        }
+      });
+      cwd = argv.project;
+    }
+    var configLoaderResult = (0, config_loader_1.configLoader)({
+      cwd: cwd !== null && cwd !== void 0 ? cwd : process.cwd(),
       explicitParams
     });
     if (configLoaderResult.resultType === "failed") {
-      console.warn(configLoaderResult.message + ". tsconfig-paths will be skipped");
+      console.warn("".concat(configLoaderResult.message, ". tsconfig-paths will be skipped"));
       return noOp2;
     }
-    var matchPath = match_path_sync_1.createMatchPath(configLoaderResult.absoluteBaseUrl, configLoaderResult.paths, configLoaderResult.mainFields, configLoaderResult.addMatchAll);
+    var matchPath = (0, match_path_sync_1.createMatchPath)(configLoaderResult.absoluteBaseUrl, configLoaderResult.paths, configLoaderResult.mainFields, configLoaderResult.addMatchAll);
     var Module = require("module");
     var originalResolveFilename = Module._resolveFilename;
     var coreModules = getCoreModules(Module.builtinModules);
@@ -4586,7 +4604,7 @@ var require_register = __commonJS((exports) => {
       if (!isCoreModule) {
         var found = matchPath(request);
         if (found) {
-          var modifiedArguments = [found].concat([].slice.call(arguments, 1));
+          var modifiedArguments = __spreadArray([found], [].slice.call(arguments, 1), true);
           return originalResolveFilename.apply(this, modifiedArguments);
         }
       }
@@ -4599,20 +4617,33 @@ var require_register = __commonJS((exports) => {
   exports.register = register2;
 });
 
-// node_modules/.pnpm/tsconfig-paths@3.12.0/node_modules/tsconfig-paths/lib/index.js
+// node_modules/.pnpm/tsconfig-paths@4.2.0/node_modules/tsconfig-paths/lib/index.js
 var require_lib4 = __commonJS((exports) => {
   "use strict";
   Object.defineProperty(exports, "__esModule", {value: true});
+  exports.loadConfig = exports.register = exports.matchFromAbsolutePathsAsync = exports.createMatchPathAsync = exports.matchFromAbsolutePaths = exports.createMatchPath = void 0;
   var match_path_sync_1 = require_match_path_sync();
-  exports.createMatchPath = match_path_sync_1.createMatchPath;
-  exports.matchFromAbsolutePaths = match_path_sync_1.matchFromAbsolutePaths;
+  Object.defineProperty(exports, "createMatchPath", {enumerable: true, get: function() {
+    return match_path_sync_1.createMatchPath;
+  }});
+  Object.defineProperty(exports, "matchFromAbsolutePaths", {enumerable: true, get: function() {
+    return match_path_sync_1.matchFromAbsolutePaths;
+  }});
   var match_path_async_1 = require_match_path_async();
-  exports.createMatchPathAsync = match_path_async_1.createMatchPathAsync;
-  exports.matchFromAbsolutePathsAsync = match_path_async_1.matchFromAbsolutePathsAsync;
+  Object.defineProperty(exports, "createMatchPathAsync", {enumerable: true, get: function() {
+    return match_path_async_1.createMatchPathAsync;
+  }});
+  Object.defineProperty(exports, "matchFromAbsolutePathsAsync", {enumerable: true, get: function() {
+    return match_path_async_1.matchFromAbsolutePathsAsync;
+  }});
   var register_1 = require_register();
-  exports.register = register_1.register;
+  Object.defineProperty(exports, "register", {enumerable: true, get: function() {
+    return register_1.register;
+  }});
   var config_loader_1 = require_config_loader();
-  exports.loadConfig = config_loader_1.loadConfig;
+  Object.defineProperty(exports, "loadConfig", {enumerable: true, get: function() {
+    return config_loader_1.loadConfig;
+  }});
 });
 
 // src/node.ts
